name: OnPush

on:
  push:
    branches:
      - master

jobs:
  build-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install poetry2setup
        run: |
          python -m pip install poetry2setup

      - name: Build setup.py
        run: |
          poetry2setup > setup.py
          rm -f pyproject.toml poetry.lock

      - name: Push setup.py to branch `setup.py`.
        run: |
          remote_repo="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config http.sslVerify false
          git config user.name "Automated Publisher"
          git config user.email "actions@users.noreply.github.com"
          git remote add publisher "${remote_repo}"
          git show-ref # useful for debugging
          git branch --verbose

          # install lfs hooks
          git lfs install

          # publish any new files
          git checkout -b setup.py
          git add -A
          timestamp=$(date -u)
          git commit -m "Automated publish: ${timestamp} ${GITHUB_SHA}" || exit 0
          git push --force publisher setup.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false --local
          poetry install -E docs
          pip install mkdocs-version

      - name: Build
        run: |
          mkdocs-version build --minor --min-version=v0.16.0 --version-regex="v(?P<version>.*)"
          echo "index-py.aber.sh" > CNAME

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: site

  push-to-mirror:
    runs-on: ubuntu-latest
    needs: [build-setup, build-docs]
    steps:
      - name: Clone
        run: |
          git init
          git remote add origin https://github.com/${GITHUB_REPOSITORY}.git
          git fetch --all
          for branch in `git branch -a | grep remotes | grep -v HEAD`; do
            git branch --track ${branch##*/} $branch
          done

      - name: Push to Coding
        run: |
          remote_repo="https://${CODING_USERNAME}:${CODING_PASSWORD}@e.coding.net/${CODING_REPOSITORY}.git"

          git remote add coding "${remote_repo}"
          git show-ref # useful for debugging
          git branch --verbose

          # publish all
          git push --all --force coding
          git push --tags --force coding
        env:
          CODING_REPOSITORY: aber/github/index.py
          CODING_USERNAME: ${{ secrets.CODING_USERNAME }}
          CODING_PASSWORD: ${{ secrets.CODING_PASSWORD }}

      - name: Push to Gitee
        run: |
          remote_repo="https://${GITEE_USERNAME}:${GITEE_PASSWORD}@gitee.com/${GITEE_REPOSITORY}.git"

          git remote add gitee "${remote_repo}"
          git show-ref # useful for debugging
          git branch --verbose

          # publish all
          git push --all --force gitee
          git push --tags --force gitee
        env:
          GITEE_REPOSITORY: abersheeran/index.py
          GITEE_USERNAME: ${{ secrets.GITEE_USERNAME }}
          GITEE_PASSWORD: ${{ secrets.GITEE_PASSWORD }}
