[tool.poetry]
authors = ["abersheeran <me@abersheeran.com>"]
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: Implementation :: CPython",
]
description = "An easy-to-use asynchronous web framework based on ASGI."
documentation = "https://index-py.abersheeran.com/"
homepage = "https://github.com/abersheeran/index.py"
license = "Apache-2.0"
name = "index.py"
packages = [
  {include = "indexpy"},
]
readme = "README.md"
repository = "https://github.com/abersheeran/index.py"
version = "0.11.1"

[tool.poetry.scripts]
index-cli = "indexpy.cli:main"

[tool.poetry.dependencies]
a2wsgi = "^0.3.6"
aiofiles = "^0.5.0"
contextvars = {version = "^2.4", python = "~3.6"}
gunicorn = {version = "^20.0.4", optional = true}
jinja2 = "^2.10.3"
pydantic = "^1.6"
pytest = {version = "^5.4.2", optional = true}
python = "^3.6"
python-multipart = "^0.0.5"
pyyaml = "^5.3"
requests = {version = "^2.23.0", optional = true}
starlette = "^0.13.1"
typing-extensions = {version = "^3.7.4", python = "<3.8"}
uvicorn = "^0.11.3"

[tool.poetry.extras]
gunicorn = ["gunicorn"] # for 'index-cli gunicorn'
pytest = ["pytest"] # for `index-cli test`
requests = ["requests"] # for `TestView`
test = ["pytest", "requests"] # include all dependencies for test

[tool.poetry.dev-dependencies]
black = {version = "*", allow-prereleases = true}
coverage = {extras = ["toml"], version = "^5.2"}
flake8 = "*"
mypy = {version = "*", allow-prereleases = true}
pytest = "^5.4.2"
pytest-asyncio = "^0.12"
pytest-cov = "^2.8.1"

# For test mount WSGI
django = "^3.0.2"

# only docs
mkdocs = "*"
mkdocs-material = "*"

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}

[tool.coverage.run]
omit = ["*/.venv/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if False:",
  "assert False",
]
skip_covered = true
show_missing = true

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]
